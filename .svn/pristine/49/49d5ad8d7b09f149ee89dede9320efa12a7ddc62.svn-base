//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FK_ServiceCalls_IdCompany", "Companys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.Company), "ServiceCalls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.ServiceCall), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FK_ServicesCompany_Company", "Companys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.Company), "ServicesCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.ServicesCompany), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FKProjectCompany", "Companys", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.Company), "ProjectCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.ProjectCompany), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FK_ServiceCalls_idPriority", "Priorities", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.Priority), "ServiceCalls", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.ServiceCall), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FK_project_Company_idProject", "project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.project), "ProjectCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.ProjectCompany), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FK_ServicesCompany", "Services", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.Service), "ServicesCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.ServicesCompany), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FKDateProjectCompany", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.Company), "DateProjectCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.DateProjectCompany), true)]
[assembly: EdmRelationshipAttribute("SystemCompanyModel", "FK_DateProjectCompany_IdProject", "project", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(EntityFrameworkDAL.project), "DateProjectCompany", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(EntityFrameworkDAL.DateProjectCompany), true)]

#endregion

namespace EntityFrameworkDAL
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class SystemCompanyEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new SystemCompanyEntities object using the connection string found in the 'SystemCompanyEntities' section of the application configuration file.
        /// </summary>
        public SystemCompanyEntities() : base("name=SystemCompanyEntities", "SystemCompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SystemCompanyEntities object.
        /// </summary>
        public SystemCompanyEntities(string connectionString) : base(connectionString, "SystemCompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new SystemCompanyEntities object.
        /// </summary>
        public SystemCompanyEntities(EntityConnection connection) : base(connection, "SystemCompanyEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companys
        {
            get
            {
                if ((_Companys == null))
                {
                    _Companys = base.CreateObjectSet<Company>("Companys");
                }
                return _Companys;
            }
        }
        private ObjectSet<Company> _Companys;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Priority> Priorities
        {
            get
            {
                if ((_Priorities == null))
                {
                    _Priorities = base.CreateObjectSet<Priority>("Priorities");
                }
                return _Priorities;
            }
        }
        private ObjectSet<Priority> _Priorities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<project> projects
        {
            get
            {
                if ((_projects == null))
                {
                    _projects = base.CreateObjectSet<project>("projects");
                }
                return _projects;
            }
        }
        private ObjectSet<project> _projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProjectCompany> ProjectCompanies
        {
            get
            {
                if ((_ProjectCompanies == null))
                {
                    _ProjectCompanies = base.CreateObjectSet<ProjectCompany>("ProjectCompanies");
                }
                return _ProjectCompanies;
            }
        }
        private ObjectSet<ProjectCompany> _ProjectCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServiceCall> ServiceCalls
        {
            get
            {
                if ((_ServiceCalls == null))
                {
                    _ServiceCalls = base.CreateObjectSet<ServiceCall>("ServiceCalls");
                }
                return _ServiceCalls;
            }
        }
        private ObjectSet<ServiceCall> _ServiceCalls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Service> Services
        {
            get
            {
                if ((_Services == null))
                {
                    _Services = base.CreateObjectSet<Service>("Services");
                }
                return _Services;
            }
        }
        private ObjectSet<Service> _Services;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ServicesCompany> ServicesCompanies
        {
            get
            {
                if ((_ServicesCompanies == null))
                {
                    _ServicesCompanies = base.CreateObjectSet<ServicesCompany>("ServicesCompanies");
                }
                return _ServicesCompanies;
            }
        }
        private ObjectSet<ServicesCompany> _ServicesCompanies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DateProjectCompany> DateProjectCompany
        {
            get
            {
                if ((_DateProjectCompany == null))
                {
                    _DateProjectCompany = base.CreateObjectSet<DateProjectCompany>("DateProjectCompany");
                }
                return _DateProjectCompany;
            }
        }
        private ObjectSet<DateProjectCompany> _DateProjectCompany;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLogin> UserLogin
        {
            get
            {
                if ((_UserLogin == null))
                {
                    _UserLogin = base.CreateObjectSet<UserLogin>("UserLogin");
                }
                return _UserLogin;
            }
        }
        private ObjectSet<UserLogin> _UserLogin;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<View_Project_Company> View_Project_Company
        {
            get
            {
                if ((_View_Project_Company == null))
                {
                    _View_Project_Company = base.CreateObjectSet<View_Project_Company>("View_Project_Company");
                }
                return _View_Project_Company;
            }
        }
        private ObjectSet<View_Project_Company> _View_Project_Company;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<SysAudit> SysAudit
        {
            get
            {
                if ((_SysAudit == null))
                {
                    _SysAudit = base.CreateObjectSet<SysAudit>("SysAudit");
                }
                return _SysAudit;
            }
        }
        private ObjectSet<SysAudit> _SysAudit;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companys EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanys(Company company)
        {
            base.AddObject("Companys", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Priorities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPriorities(Priority priority)
        {
            base.AddObject("Priorities", priority);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToprojects(project project)
        {
            base.AddObject("projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProjectCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjectCompanies(ProjectCompany projectCompany)
        {
            base.AddObject("ProjectCompanies", projectCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServiceCalls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServiceCalls(ServiceCall serviceCall)
        {
            base.AddObject("ServiceCalls", serviceCall);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Services EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServices(Service service)
        {
            base.AddObject("Services", service);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ServicesCompanies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToServicesCompanies(ServicesCompany servicesCompany)
        {
            base.AddObject("ServicesCompanies", servicesCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DateProjectCompany EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDateProjectCompany(DateProjectCompany dateProjectCompany)
        {
            base.AddObject("DateProjectCompany", dateProjectCompany);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLogin EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLogin(UserLogin userLogin)
        {
            base.AddObject("UserLogin", userLogin);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the View_Project_Company EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToView_Project_Company(View_Project_Company view_Project_Company)
        {
            base.AddObject("View_Project_Company", view_Project_Company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the SysAudit EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSysAudit(SysAudit sysAudit)
        {
            base.AddObject("SysAudit", sysAudit);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="idCompany">Initial value of the idCompany property.</param>
        public static Company CreateCompany(global::System.Int32 idCompany)
        {
            Company company = new Company();
            company.idCompany = idCompany;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companyName
        {
            get
            {
                return _companyName;
            }
            set
            {
                OncompanyNameChanging(value);
                ReportPropertyChanging("companyName");
                _companyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companyName");
                OncompanyNameChanged();
            }
        }
        private global::System.String _companyName;
        partial void OncompanyNameChanging(global::System.String value);
        partial void OncompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String contactName
        {
            get
            {
                return _contactName;
            }
            set
            {
                OncontactNameChanging(value);
                ReportPropertyChanging("contactName");
                _contactName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("contactName");
                OncontactNameChanged();
            }
        }
        private global::System.String _contactName;
        partial void OncontactNameChanging(global::System.String value);
        partial void OncontactNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String mobilePhone
        {
            get
            {
                return _mobilePhone;
            }
            set
            {
                OnmobilePhoneChanging(value);
                ReportPropertyChanging("mobilePhone");
                _mobilePhone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("mobilePhone");
                OnmobilePhoneChanged();
            }
        }
        private global::System.String _mobilePhone;
        partial void OnmobilePhoneChanging(global::System.String value);
        partial void OnmobilePhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String email
        {
            get
            {
                return _email;
            }
            set
            {
                OnemailChanging(value);
                ReportPropertyChanging("email");
                _email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("email");
                OnemailChanged();
            }
        }
        private global::System.String _email;
        partial void OnemailChanging(global::System.String value);
        partial void OnemailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FAX
        {
            get
            {
                return _FAX;
            }
            set
            {
                OnFAXChanging(value);
                ReportPropertyChanging("FAX");
                _FAX = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FAX");
                OnFAXChanged();
            }
        }
        private global::System.String _FAX;
        partial void OnFAXChanging(global::System.String value);
        partial void OnFAXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companynumber
        {
            get
            {
                return _companynumber;
            }
            set
            {
                OncompanynumberChanging(value);
                ReportPropertyChanging("companynumber");
                _companynumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companynumber");
                OncompanynumberChanged();
            }
        }
        private global::System.String _companynumber;
        partial void OncompanynumberChanging(global::System.String value);
        partial void OncompanynumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String address
        {
            get
            {
                return _address;
            }
            set
            {
                OnaddressChanging(value);
                ReportPropertyChanging("address");
                _address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("address");
                OnaddressChanged();
            }
        }
        private global::System.String _address;
        partial void OnaddressChanging(global::System.String value);
        partial void OnaddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String city
        {
            get
            {
                return _city;
            }
            set
            {
                OncityChanging(value);
                ReportPropertyChanging("city");
                _city = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("city");
                OncityChanged();
            }
        }
        private global::System.String _city;
        partial void OncityChanging(global::System.String value);
        partial void OncityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ZIP
        {
            get
            {
                return _ZIP;
            }
            set
            {
                OnZIPChanging(value);
                ReportPropertyChanging("ZIP");
                _ZIP = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ZIP");
                OnZIPChanged();
            }
        }
        private global::System.String _ZIP;
        partial void OnZIPChanging(global::System.String value);
        partial void OnZIPChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalNum
        {
            get
            {
                return _PostalNum;
            }
            set
            {
                OnPostalNumChanging(value);
                ReportPropertyChanging("PostalNum");
                _PostalNum = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalNum");
                OnPostalNumChanged();
            }
        }
        private global::System.String _PostalNum;
        partial void OnPostalNumChanging(global::System.String value);
        partial void OnPostalNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCompany
        {
            get
            {
                return _idCompany;
            }
            set
            {
                if (_idCompany != value)
                {
                    OnidCompanyChanging(value);
                    ReportPropertyChanging("idCompany");
                    _idCompany = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCompany");
                    OnidCompanyChanged();
                }
            }
        }
        private global::System.Int32 _idCompany;
        partial void OnidCompanyChanging(global::System.Int32 value);
        partial void OnidCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String paymentTerms
        {
            get
            {
                return _paymentTerms;
            }
            set
            {
                OnpaymentTermsChanging(value);
                ReportPropertyChanging("paymentTerms");
                _paymentTerms = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("paymentTerms");
                OnpaymentTermsChanged();
            }
        }
        private global::System.String _paymentTerms;
        partial void OnpaymentTermsChanging(global::System.String value);
        partial void OnpaymentTermsChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServiceCalls_IdCompany", "ServiceCalls")]
        public EntityCollection<ServiceCall> ServiceCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceCall>("SystemCompanyModel.FK_ServiceCalls_IdCompany", "ServiceCalls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceCall>("SystemCompanyModel.FK_ServiceCalls_IdCompany", "ServiceCalls", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServicesCompany_Company", "ServicesCompany")]
        public EntityCollection<ServicesCompany> ServicesCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServicesCompany>("SystemCompanyModel.FK_ServicesCompany_Company", "ServicesCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServicesCompany>("SystemCompanyModel.FK_ServicesCompany_Company", "ServicesCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FKProjectCompany", "ProjectCompany")]
        public EntityCollection<ProjectCompany> ProjectCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCompany>("SystemCompanyModel.FKProjectCompany", "ProjectCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCompany>("SystemCompanyModel.FKProjectCompany", "ProjectCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FKDateProjectCompany", "DateProjectCompany")]
        public EntityCollection<DateProjectCompany> DateProjectCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DateProjectCompany>("SystemCompanyModel.FKDateProjectCompany", "DateProjectCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DateProjectCompany>("SystemCompanyModel.FKDateProjectCompany", "DateProjectCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="DateProjectCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DateProjectCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DateProjectCompany object.
        /// </summary>
        /// <param name="idCompany">Initial value of the idCompany property.</param>
        /// <param name="idProject">Initial value of the idProject property.</param>
        /// <param name="id">Initial value of the id property.</param>
        public static DateProjectCompany CreateDateProjectCompany(global::System.Int32 idCompany, global::System.Int32 idProject, global::System.Int32 id)
        {
            DateProjectCompany dateProjectCompany = new DateProjectCompany();
            dateProjectCompany.idCompany = idCompany;
            dateProjectCompany.idProject = idProject;
            dateProjectCompany.id = id;
            return dateProjectCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStartProject
        {
            get
            {
                return _DateStartProject;
            }
            set
            {
                OnDateStartProjectChanging(value);
                ReportPropertyChanging("DateStartProject");
                _DateStartProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStartProject");
                OnDateStartProjectChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStartProject;
        partial void OnDateStartProjectChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFinishProject
        {
            get
            {
                return _DateFinishProject;
            }
            set
            {
                OnDateFinishProjectChanging(value);
                ReportPropertyChanging("DateFinishProject");
                _DateFinishProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFinishProject");
                OnDateFinishProjectChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFinishProject;
        partial void OnDateFinishProjectChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFinishProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCompany
        {
            get
            {
                return _idCompany;
            }
            set
            {
                OnidCompanyChanging(value);
                ReportPropertyChanging("idCompany");
                _idCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idCompany");
                OnidCompanyChanged();
            }
        }
        private global::System.Int32 _idCompany;
        partial void OnidCompanyChanging(global::System.Int32 value);
        partial void OnidCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProject
        {
            get
            {
                return _idProject;
            }
            set
            {
                OnidProjectChanging(value);
                ReportPropertyChanging("idProject");
                _idProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idProject");
                OnidProjectChanged();
            }
        }
        private global::System.Int32 _idProject;
        partial void OnidProjectChanging(global::System.Int32 value);
        partial void OnidProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FKDateProjectCompany", "Company")]
        public Company Companys
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FKDateProjectCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FKDateProjectCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanysReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FKDateProjectCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SystemCompanyModel.FKDateProjectCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_DateProjectCompany_IdProject", "project")]
        public project project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("SystemCompanyModel.FK_DateProjectCompany_IdProject", "project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("SystemCompanyModel.FK_DateProjectCompany_IdProject", "project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<project> projectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("SystemCompanyModel.FK_DateProjectCompany_IdProject", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<project>("SystemCompanyModel.FK_DateProjectCompany_IdProject", "project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="Priority")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Priority : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Priority object.
        /// </summary>
        /// <param name="idPriority">Initial value of the idPriority property.</param>
        public static Priority CreatePriority(global::System.Int32 idPriority)
        {
            Priority priority = new Priority();
            priority.idPriority = idPriority;
            return priority;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPriority
        {
            get
            {
                return _idPriority;
            }
            set
            {
                if (_idPriority != value)
                {
                    OnidPriorityChanging(value);
                    ReportPropertyChanging("idPriority");
                    _idPriority = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idPriority");
                    OnidPriorityChanged();
                }
            }
        }
        private global::System.Int32 _idPriority;
        partial void OnidPriorityChanging(global::System.Int32 value);
        partial void OnidPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TypePriority
        {
            get
            {
                return _TypePriority;
            }
            set
            {
                OnTypePriorityChanging(value);
                ReportPropertyChanging("TypePriority");
                _TypePriority = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("TypePriority");
                OnTypePriorityChanged();
            }
        }
        private global::System.String _TypePriority;
        partial void OnTypePriorityChanging(global::System.String value);
        partial void OnTypePriorityChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServiceCalls_idPriority", "ServiceCalls")]
        public EntityCollection<ServiceCall> ServiceCalls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServiceCall>("SystemCompanyModel.FK_ServiceCalls_idPriority", "ServiceCalls");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServiceCall>("SystemCompanyModel.FK_ServiceCalls_idPriority", "ServiceCalls", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new project object.
        /// </summary>
        /// <param name="idProject">Initial value of the idProject property.</param>
        public static project Createproject(global::System.Int32 idProject)
        {
            project project = new project();
            project.idProject = idProject;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProject
        {
            get
            {
                return _idProject;
            }
            set
            {
                if (_idProject != value)
                {
                    OnidProjectChanging(value);
                    ReportPropertyChanging("idProject");
                    _idProject = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProject");
                    OnidProjectChanged();
                }
            }
        }
        private global::System.Int32 _idProject;
        partial void OnidProjectChanging(global::System.Int32 value);
        partial void OnidProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String projectName
        {
            get
            {
                return _projectName;
            }
            set
            {
                OnprojectNameChanging(value);
                ReportPropertyChanging("projectName");
                _projectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("projectName");
                OnprojectNameChanged();
            }
        }
        private global::System.String _projectName;
        partial void OnprojectNameChanging(global::System.String value);
        partial void OnprojectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String projectDescription
        {
            get
            {
                return _projectDescription;
            }
            set
            {
                OnprojectDescriptionChanging(value);
                ReportPropertyChanging("projectDescription");
                _projectDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("projectDescription");
                OnprojectDescriptionChanged();
            }
        }
        private global::System.String _projectDescription;
        partial void OnprojectDescriptionChanging(global::System.String value);
        partial void OnprojectDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_project_Company_idProject", "ProjectCompany")]
        public EntityCollection<ProjectCompany> ProjectCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ProjectCompany>("SystemCompanyModel.FK_project_Company_idProject", "ProjectCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ProjectCompany>("SystemCompanyModel.FK_project_Company_idProject", "ProjectCompany", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_DateProjectCompany_IdProject", "DateProjectCompany")]
        public EntityCollection<DateProjectCompany> DateProjectCompany
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DateProjectCompany>("SystemCompanyModel.FK_DateProjectCompany_IdProject", "DateProjectCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DateProjectCompany>("SystemCompanyModel.FK_DateProjectCompany_IdProject", "DateProjectCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="ProjectCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProjectCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProjectCompany object.
        /// </summary>
        /// <param name="idCustomerProject">Initial value of the idCustomerProject property.</param>
        /// <param name="idProject">Initial value of the idProject property.</param>
        /// <param name="idCompany">Initial value of the idCompany property.</param>
        public static ProjectCompany CreateProjectCompany(global::System.Int32 idCustomerProject, global::System.Int32 idProject, global::System.Int32 idCompany)
        {
            ProjectCompany projectCompany = new ProjectCompany();
            projectCompany.idCustomerProject = idCustomerProject;
            projectCompany.idProject = idProject;
            projectCompany.idCompany = idCompany;
            return projectCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCustomerProject
        {
            get
            {
                return _idCustomerProject;
            }
            set
            {
                if (_idCustomerProject != value)
                {
                    OnidCustomerProjectChanging(value);
                    ReportPropertyChanging("idCustomerProject");
                    _idCustomerProject = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCustomerProject");
                    OnidCustomerProjectChanged();
                }
            }
        }
        private global::System.Int32 _idCustomerProject;
        partial void OnidCustomerProjectChanging(global::System.Int32 value);
        partial void OnidCustomerProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProject
        {
            get
            {
                return _idProject;
            }
            set
            {
                OnidProjectChanging(value);
                ReportPropertyChanging("idProject");
                _idProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idProject");
                OnidProjectChanged();
            }
        }
        private global::System.Int32 _idProject;
        partial void OnidProjectChanging(global::System.Int32 value);
        partial void OnidProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCompany
        {
            get
            {
                return _idCompany;
            }
            set
            {
                OnidCompanyChanging(value);
                ReportPropertyChanging("idCompany");
                _idCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idCompany");
                OnidCompanyChanged();
            }
        }
        private global::System.Int32 _idCompany;
        partial void OnidCompanyChanging(global::System.Int32 value);
        partial void OnidCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String priceType
        {
            get
            {
                return _priceType;
            }
            set
            {
                OnpriceTypeChanging(value);
                ReportPropertyChanging("priceType");
                _priceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("priceType");
                OnpriceTypeChanged();
            }
        }
        private global::System.String _priceType;
        partial void OnpriceTypeChanging(global::System.String value);
        partial void OnpriceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String discriptions
        {
            get
            {
                return _discriptions;
            }
            set
            {
                OndiscriptionsChanging(value);
                ReportPropertyChanging("discriptions");
                _discriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("discriptions");
                OndiscriptionsChanged();
            }
        }
        private global::System.String _discriptions;
        partial void OndiscriptionsChanging(global::System.String value);
        partial void OndiscriptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String paid
        {
            get
            {
                return _paid;
            }
            set
            {
                OnpaidChanging(value);
                ReportPropertyChanging("paid");
                _paid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("paid");
                OnpaidChanged();
            }
        }
        private global::System.String _paid;
        partial void OnpaidChanging(global::System.String value);
        partial void OnpaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String destination
        {
            get
            {
                return _destination;
            }
            set
            {
                OndestinationChanging(value);
                ReportPropertyChanging("destination");
                _destination = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("destination");
                OndestinationChanged();
            }
        }
        private global::System.String _destination;
        partial void OndestinationChanging(global::System.String value);
        partial void OndestinationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FKProjectCompany", "Companys")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FKProjectCompany", "Companys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FKProjectCompany", "Companys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FKProjectCompany", "Companys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SystemCompanyModel.FKProjectCompany", "Companys", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_project_Company_idProject", "project")]
        public project project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("SystemCompanyModel.FK_project_Company_idProject", "project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("SystemCompanyModel.FK_project_Company_idProject", "project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<project> projectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<project>("SystemCompanyModel.FK_project_Company_idProject", "project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<project>("SystemCompanyModel.FK_project_Company_idProject", "project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="Service")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Service : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Service object.
        /// </summary>
        /// <param name="idService">Initial value of the idService property.</param>
        public static Service CreateService(global::System.Int32 idService)
        {
            Service service = new Service();
            service.idService = idService;
            return service;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idService
        {
            get
            {
                return _idService;
            }
            set
            {
                if (_idService != value)
                {
                    OnidServiceChanging(value);
                    ReportPropertyChanging("idService");
                    _idService = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idService");
                    OnidServiceChanged();
                }
            }
        }
        private global::System.Int32 _idService;
        partial void OnidServiceChanging(global::System.Int32 value);
        partial void OnidServiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String servicesName
        {
            get
            {
                return _servicesName;
            }
            set
            {
                OnservicesNameChanging(value);
                ReportPropertyChanging("servicesName");
                _servicesName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("servicesName");
                OnservicesNameChanged();
            }
        }
        private global::System.String _servicesName;
        partial void OnservicesNameChanging(global::System.String value);
        partial void OnservicesNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServicesCompany", "ServicesCompany")]
        public EntityCollection<ServicesCompany> ServicesCompanies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<ServicesCompany>("SystemCompanyModel.FK_ServicesCompany", "ServicesCompany");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<ServicesCompany>("SystemCompanyModel.FK_ServicesCompany", "ServicesCompany", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="ServiceCall")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServiceCall : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServiceCall object.
        /// </summary>
        /// <param name="idCallsServices">Initial value of the idCallsServices property.</param>
        /// <param name="idCompany">Initial value of the idCompany property.</param>
        /// <param name="idPriority">Initial value of the idPriority property.</param>
        public static ServiceCall CreateServiceCall(global::System.Int32 idCallsServices, global::System.Int32 idCompany, global::System.Int32 idPriority)
        {
            ServiceCall serviceCall = new ServiceCall();
            serviceCall.idCallsServices = idCallsServices;
            serviceCall.idCompany = idCompany;
            serviceCall.idPriority = idPriority;
            return serviceCall;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCallsServices
        {
            get
            {
                return _idCallsServices;
            }
            set
            {
                if (_idCallsServices != value)
                {
                    OnidCallsServicesChanging(value);
                    ReportPropertyChanging("idCallsServices");
                    _idCallsServices = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCallsServices");
                    OnidCallsServicesChanged();
                }
            }
        }
        private global::System.Int32 _idCallsServices;
        partial void OnidCallsServicesChanging(global::System.Int32 value);
        partial void OnidCallsServicesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCompany
        {
            get
            {
                return _idCompany;
            }
            set
            {
                OnidCompanyChanging(value);
                ReportPropertyChanging("idCompany");
                _idCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idCompany");
                OnidCompanyChanged();
            }
        }
        private global::System.Int32 _idCompany;
        partial void OnidCompanyChanging(global::System.Int32 value);
        partial void OnidCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> dateOpenCalls
        {
            get
            {
                return _dateOpenCalls;
            }
            set
            {
                OndateOpenCallsChanging(value);
                ReportPropertyChanging("dateOpenCalls");
                _dateOpenCalls = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("dateOpenCalls");
                OndateOpenCallsChanged();
            }
        }
        private Nullable<global::System.DateTime> _dateOpenCalls;
        partial void OndateOpenCallsChanging(Nullable<global::System.DateTime> value);
        partial void OndateOpenCallsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String discriptions
        {
            get
            {
                return _discriptions;
            }
            set
            {
                OndiscriptionsChanging(value);
                ReportPropertyChanging("discriptions");
                _discriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("discriptions");
                OndiscriptionsChanged();
            }
        }
        private global::System.String _discriptions;
        partial void OndiscriptionsChanging(global::System.String value);
        partial void OndiscriptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idPriority
        {
            get
            {
                return _idPriority;
            }
            set
            {
                OnidPriorityChanging(value);
                ReportPropertyChanging("idPriority");
                _idPriority = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idPriority");
                OnidPriorityChanged();
            }
        }
        private global::System.Int32 _idPriority;
        partial void OnidPriorityChanging(global::System.Int32 value);
        partial void OnidPriorityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String status
        {
            get
            {
                return _status;
            }
            set
            {
                OnstatusChanging(value);
                ReportPropertyChanging("status");
                _status = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("status");
                OnstatusChanged();
            }
        }
        private global::System.String _status;
        partial void OnstatusChanging(global::System.String value);
        partial void OnstatusChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServiceCalls_IdCompany", "Companys")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FK_ServiceCalls_IdCompany", "Companys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FK_ServiceCalls_IdCompany", "Companys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FK_ServiceCalls_IdCompany", "Companys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SystemCompanyModel.FK_ServiceCalls_IdCompany", "Companys", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServiceCalls_idPriority", "Priorities")]
        public Priority Priority
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("SystemCompanyModel.FK_ServiceCalls_idPriority", "Priorities").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("SystemCompanyModel.FK_ServiceCalls_idPriority", "Priorities").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Priority> PriorityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Priority>("SystemCompanyModel.FK_ServiceCalls_idPriority", "Priorities");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Priority>("SystemCompanyModel.FK_ServiceCalls_idPriority", "Priorities", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="ServicesCompany")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ServicesCompany : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ServicesCompany object.
        /// </summary>
        /// <param name="idCustService">Initial value of the idCustService property.</param>
        /// <param name="idCompany">Initial value of the idCompany property.</param>
        /// <param name="idService">Initial value of the idService property.</param>
        public static ServicesCompany CreateServicesCompany(global::System.Int32 idCustService, global::System.Int32 idCompany, global::System.Int32 idService)
        {
            ServicesCompany servicesCompany = new ServicesCompany();
            servicesCompany.idCustService = idCustService;
            servicesCompany.idCompany = idCompany;
            servicesCompany.idService = idService;
            return servicesCompany;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCustService
        {
            get
            {
                return _idCustService;
            }
            set
            {
                if (_idCustService != value)
                {
                    OnidCustServiceChanging(value);
                    ReportPropertyChanging("idCustService");
                    _idCustService = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCustService");
                    OnidCustServiceChanged();
                }
            }
        }
        private global::System.Int32 _idCustService;
        partial void OnidCustServiceChanging(global::System.Int32 value);
        partial void OnidCustServiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCompany
        {
            get
            {
                return _idCompany;
            }
            set
            {
                OnidCompanyChanging(value);
                ReportPropertyChanging("idCompany");
                _idCompany = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idCompany");
                OnidCompanyChanged();
            }
        }
        private global::System.Int32 _idCompany;
        partial void OnidCompanyChanging(global::System.Int32 value);
        partial void OnidCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idService
        {
            get
            {
                return _idService;
            }
            set
            {
                OnidServiceChanging(value);
                ReportPropertyChanging("idService");
                _idService = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("idService");
                OnidServiceChanged();
            }
        }
        private global::System.Int32 _idService;
        partial void OnidServiceChanging(global::System.Int32 value);
        partial void OnidServiceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> startdate
        {
            get
            {
                return _startdate;
            }
            set
            {
                OnstartdateChanging(value);
                ReportPropertyChanging("startdate");
                _startdate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("startdate");
                OnstartdateChanged();
            }
        }
        private Nullable<global::System.DateTime> _startdate;
        partial void OnstartdateChanging(Nullable<global::System.DateTime> value);
        partial void OnstartdateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> enddate
        {
            get
            {
                return _enddate;
            }
            set
            {
                OnenddateChanging(value);
                ReportPropertyChanging("enddate");
                _enddate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("enddate");
                OnenddateChanged();
            }
        }
        private Nullable<global::System.DateTime> _enddate;
        partial void OnenddateChanging(Nullable<global::System.DateTime> value);
        partial void OnenddateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String price
        {
            get
            {
                return _price;
            }
            set
            {
                OnpriceChanging(value);
                ReportPropertyChanging("price");
                _price = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("price");
                OnpriceChanged();
            }
        }
        private global::System.String _price;
        partial void OnpriceChanging(global::System.String value);
        partial void OnpriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String priceCost
        {
            get
            {
                return _priceCost;
            }
            set
            {
                OnpriceCostChanging(value);
                ReportPropertyChanging("priceCost");
                _priceCost = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("priceCost");
                OnpriceCostChanged();
            }
        }
        private global::System.String _priceCost;
        partial void OnpriceCostChanging(global::System.String value);
        partial void OnpriceCostChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> paid
        {
            get
            {
                return _paid;
            }
            set
            {
                OnpaidChanging(value);
                ReportPropertyChanging("paid");
                _paid = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("paid");
                OnpaidChanged();
            }
        }
        private Nullable<global::System.Boolean> _paid;
        partial void OnpaidChanging(Nullable<global::System.Boolean> value);
        partial void OnpaidChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServicesCompany_Company", "Companys")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FK_ServicesCompany_Company", "Companys").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FK_ServicesCompany_Company", "Companys").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("SystemCompanyModel.FK_ServicesCompany_Company", "Companys");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("SystemCompanyModel.FK_ServicesCompany_Company", "Companys", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("SystemCompanyModel", "FK_ServicesCompany", "Services")]
        public Service Service
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("SystemCompanyModel.FK_ServicesCompany", "Services").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("SystemCompanyModel.FK_ServicesCompany", "Services").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Service> ServiceReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Service>("SystemCompanyModel.FK_ServicesCompany", "Services");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Service>("SystemCompanyModel.FK_ServicesCompany", "Services", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="SysAudit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SysAudit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SysAudit object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static SysAudit CreateSysAudit(global::System.Int32 id)
        {
            SysAudit sysAudit = new SysAudit();
            sysAudit.id = id;
            return sysAudit;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> key1
        {
            get
            {
                return _key1;
            }
            set
            {
                Onkey1Changing(value);
                ReportPropertyChanging("key1");
                _key1 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("key1");
                Onkey1Changed();
            }
        }
        private Nullable<global::System.Int32> _key1;
        partial void Onkey1Changing(Nullable<global::System.Int32> value);
        partial void Onkey1Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> key2
        {
            get
            {
                return _key2;
            }
            set
            {
                Onkey2Changing(value);
                ReportPropertyChanging("key2");
                _key2 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("key2");
                Onkey2Changed();
            }
        }
        private Nullable<global::System.Int32> _key2;
        partial void Onkey2Changing(Nullable<global::System.Int32> value);
        partial void Onkey2Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> key3
        {
            get
            {
                return _key3;
            }
            set
            {
                Onkey3Changing(value);
                ReportPropertyChanging("key3");
                _key3 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("key3");
                Onkey3Changed();
            }
        }
        private Nullable<global::System.Int32> _key3;
        partial void Onkey3Changing(Nullable<global::System.Int32> value);
        partial void Onkey3Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String tableName
        {
            get
            {
                return _tableName;
            }
            set
            {
                OntableNameChanging(value);
                ReportPropertyChanging("tableName");
                _tableName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("tableName");
                OntableNameChanged();
            }
        }
        private global::System.String _tableName;
        partial void OntableNameChanging(global::System.String value);
        partial void OntableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String value
        {
            get
            {
                return _value;
            }
            set
            {
                OnvalueChanging(value);
                ReportPropertyChanging("value");
                _value = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("value");
                OnvalueChanged();
            }
        }
        private global::System.String _value;
        partial void OnvalueChanging(global::System.String value);
        partial void OnvalueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateInserted
        {
            get
            {
                return _DateInserted;
            }
            set
            {
                OnDateInsertedChanging(value);
                ReportPropertyChanging("DateInserted");
                _DateInserted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateInserted");
                OnDateInsertedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateInserted;
        partial void OnDateInsertedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateInsertedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FieldAction
        {
            get
            {
                return _FieldAction;
            }
            set
            {
                OnFieldActionChanging(value);
                ReportPropertyChanging("FieldAction");
                _FieldAction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FieldAction");
                OnFieldActionChanged();
            }
        }
        private global::System.String _FieldAction;
        partial void OnFieldActionChanging(global::System.String value);
        partial void OnFieldActionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="UserLogin")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLogin : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLogin object.
        /// </summary>
        /// <param name="idUserLogin">Initial value of the idUserLogin property.</param>
        public static UserLogin CreateUserLogin(global::System.Int32 idUserLogin)
        {
            UserLogin userLogin = new UserLogin();
            userLogin.idUserLogin = idUserLogin;
            return userLogin;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String VPermission
        {
            get
            {
                return _VPermission;
            }
            set
            {
                OnVPermissionChanging(value);
                ReportPropertyChanging("VPermission");
                _VPermission = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("VPermission");
                OnVPermissionChanged();
            }
        }
        private global::System.String _VPermission;
        partial void OnVPermissionChanging(global::System.String value);
        partial void OnVPermissionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idUserLogin
        {
            get
            {
                return _idUserLogin;
            }
            set
            {
                if (_idUserLogin != value)
                {
                    OnidUserLoginChanging(value);
                    ReportPropertyChanging("idUserLogin");
                    _idUserLogin = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idUserLogin");
                    OnidUserLoginChanged();
                }
            }
        }
        private global::System.Int32 _idUserLogin;
        partial void OnidUserLoginChanging(global::System.Int32 value);
        partial void OnidUserLoginChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="SystemCompanyModel", Name="View_Project_Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class View_Project_Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new View_Project_Company object.
        /// </summary>
        /// <param name="idProject">Initial value of the idProject property.</param>
        /// <param name="idCompany">Initial value of the idCompany property.</param>
        public static View_Project_Company CreateView_Project_Company(global::System.Int32 idProject, global::System.Int32 idCompany)
        {
            View_Project_Company view_Project_Company = new View_Project_Company();
            view_Project_Company.idProject = idProject;
            view_Project_Company.idCompany = idCompany;
            return view_Project_Company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String companyName
        {
            get
            {
                return _companyName;
            }
            set
            {
                OncompanyNameChanging(value);
                ReportPropertyChanging("companyName");
                _companyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("companyName");
                OncompanyNameChanged();
            }
        }
        private global::System.String _companyName;
        partial void OncompanyNameChanging(global::System.String value);
        partial void OncompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String projectName
        {
            get
            {
                return _projectName;
            }
            set
            {
                OnprojectNameChanging(value);
                ReportPropertyChanging("projectName");
                _projectName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("projectName");
                OnprojectNameChanged();
            }
        }
        private global::System.String _projectName;
        partial void OnprojectNameChanging(global::System.String value);
        partial void OnprojectNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStartProject
        {
            get
            {
                return _DateStartProject;
            }
            set
            {
                OnDateStartProjectChanging(value);
                ReportPropertyChanging("DateStartProject");
                _DateStartProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStartProject");
                OnDateStartProjectChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStartProject;
        partial void OnDateStartProjectChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateFinishProject
        {
            get
            {
                return _DateFinishProject;
            }
            set
            {
                OnDateFinishProjectChanging(value);
                ReportPropertyChanging("DateFinishProject");
                _DateFinishProject = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateFinishProject");
                OnDateFinishProjectChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateFinishProject;
        partial void OnDateFinishProjectChanging(Nullable<global::System.DateTime> value);
        partial void OnDateFinishProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String priceType
        {
            get
            {
                return _priceType;
            }
            set
            {
                OnpriceTypeChanging(value);
                ReportPropertyChanging("priceType");
                _priceType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("priceType");
                OnpriceTypeChanged();
            }
        }
        private global::System.String _priceType;
        partial void OnpriceTypeChanging(global::System.String value);
        partial void OnpriceTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String discriptions
        {
            get
            {
                return _discriptions;
            }
            set
            {
                OndiscriptionsChanging(value);
                ReportPropertyChanging("discriptions");
                _discriptions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("discriptions");
                OndiscriptionsChanged();
            }
        }
        private global::System.String _discriptions;
        partial void OndiscriptionsChanging(global::System.String value);
        partial void OndiscriptionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String paid
        {
            get
            {
                return _paid;
            }
            set
            {
                OnpaidChanging(value);
                ReportPropertyChanging("paid");
                _paid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("paid");
                OnpaidChanged();
            }
        }
        private global::System.String _paid;
        partial void OnpaidChanging(global::System.String value);
        partial void OnpaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idProject
        {
            get
            {
                return _idProject;
            }
            set
            {
                if (_idProject != value)
                {
                    OnidProjectChanging(value);
                    ReportPropertyChanging("idProject");
                    _idProject = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idProject");
                    OnidProjectChanged();
                }
            }
        }
        private global::System.Int32 _idProject;
        partial void OnidProjectChanging(global::System.Int32 value);
        partial void OnidProjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 idCompany
        {
            get
            {
                return _idCompany;
            }
            set
            {
                if (_idCompany != value)
                {
                    OnidCompanyChanging(value);
                    ReportPropertyChanging("idCompany");
                    _idCompany = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("idCompany");
                    OnidCompanyChanged();
                }
            }
        }
        private global::System.Int32 _idCompany;
        partial void OnidCompanyChanging(global::System.Int32 value);
        partial void OnidCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String destination
        {
            get
            {
                return _destination;
            }
            set
            {
                OndestinationChanging(value);
                ReportPropertyChanging("destination");
                _destination = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("destination");
                OndestinationChanged();
            }
        }
        private global::System.String _destination;
        partial void OndestinationChanging(global::System.String value);
        partial void OndestinationChanged();

        #endregion

    
    }

    #endregion

    
}
