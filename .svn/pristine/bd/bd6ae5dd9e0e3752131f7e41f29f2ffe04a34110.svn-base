using System;
using System.Threading;
using System.Windows.Forms;
using Services;


namespace SystemCustomers
{
    public partial class Maintenance : Form
    {
        public Maintenance()
        {
            InitializeComponent();
        }
        
        private void btnBackup_Click(object sender, EventArgs e)
        {
            try {
                new ManageBackupAndRestoreService(Manage.ConnectionString, "Backup").BackUpDatabase();
            }
            catch (Exception ex)
            {
                MessageUtils.LogUtils.WriteToLog("Error Backup:" + ex.Message + DateTime.Now);
                MessageUtils.LogUtils.SystemEventLogsInformation("Error Backup: " + ex.Message + DateTime.Now);
                MessageBox.Show("The Backup Faild");
            }
            this.Close();
        }

        public void Backup()
        {
            if (new DB.DBBackup().BackUpDatabase())
            {
                MessageUtils.LogUtils.WriteToLog(" Backup Success: " + DateTime.Now);
                MessageUtils.LogUtils.SystemEventLogsInformation(" Backup Success: " + DateTime.Now);
               
               // this.Close();
            }
            else
            {
                
            }
        
        }
      /*  private void btnRestore_Click(object sender, EventArgs e)
        {
            if (MessageBox.Show("?בטוח שאתה רוצה לשחזר", "שיחזור", MessageBoxButtons.OKCancel) == DialogResult.OK)
            {
                DB.DBBackup restore = new DB.DBBackup();
                bool rTrue = restore.RestoreDatabase();
                if (rTrue)
                {
                    MessageLog.LogUtils.WriteToLog(" Restore Success: " + DateTime.Now);
                    MessageLog.LogUtils.SystemEventLogs(" Restore Success: " + DateTime.Now);
                    MessageBox.Show("השחזור עבר בהצלחה");
                }
                else
                {
                    MessageLog.LogUtils.WriteToLog(" Error Restore: " + DateTime.Now);
                    MessageLog.LogUtils.SystemEventLogs(" Error Restore: " + DateTime.Now);
                }
            }
           
        }*/

        protected override bool ProcessCmdKey(ref Message msg, Keys keyData)
        {
            const int WM_KEYDOWN = 0x100;
            // Only Process Key Down events for the Escape Key
            if (msg.Msg == WM_KEYDOWN)
            {
                if (keyData == Keys.Escape)
                {
                    this.Close();
                    // DialogResult = DialogResult.Cancel;
                    // Could call cancel click handler here
                    // Return true to indicate that Escape key was handled
                    return true;
                }
            }
            return base.ProcessCmdKey(ref msg, keyData);
        }

        private void btnRestore_Click(object sender, EventArgs e)
        {
            try
            {
                new ManageBackupAndRestoreService(Manage.ConnectionString, "Restore").BackUpDatabase();
            }
            catch (Exception ex)
            {
                MessageUtils.LogUtils.WriteToLog("Error Backup:" + ex.Message + DateTime.Now);
                MessageUtils.LogUtils.SystemEventLogsInformation("Error Backup: " + ex.Message + DateTime.Now);
                MessageBox.Show("The Restore Faild");
            }
            this.Close();
            //var t = new Thread(Restore);
            //t.Start();
           // Restore();
        }

        public void Restore()
        {
            if (MessageBox.Show("?בטוח שאתה רוצה לשחזר", "שיחזור", MessageBoxButtons.OKCancel) == DialogResult.OK)
            {
                if (new DB.DBBackup().RestoreDatabase())
                {
                    MessageUtils.LogUtils.WriteToLog(" Restore Success: " + DateTime.Now);
                    MessageUtils.LogUtils.SystemEventLogsInformation(" Restore Success: " + DateTime.Now);
                    MessageBox.Show("השחזור עבר בהצלחה");
                   // this.Close();
                }
                else
                {
                    MessageUtils.LogUtils.WriteToLog(" Error Restore: " + DateTime.Now);
                    MessageUtils.LogUtils.SystemEventLogsError(" Error Restore: " + DateTime.Now);
                }
            }

        }
    }
}
